import { AbstractSlashCommand, CommandContext, CommandUtils } from "../../utils/index.js";
import { UserState } from "../../schemas/User.js";
import { inlineKeyboards, replyKeyboards } from "../../utils/keyboards.js";

export class StartCommand extends AbstractSlashCommand {
  constructor(utils: CommandUtils) {
    super("start", utils);
  }

  async execute(ctx: CommandContext) {
    if (!ctx.user) return;

    if (ctx.newUser) {
        await ctx.reply(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ë–ì–ê–°!\n\n" +
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å:",
            {
                reply_markup: inlineKeyboards.chooseRole
            }
        );
    } else {
        ctx.user.state = UserState.MainMenu;
        await ctx.user.save();
        
        await ctx.reply(
            "üéì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!\n\n" +
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            {
                reply_markup: replyKeyboards[UserState.MainMenu]
            }
        );
    }
  }
}